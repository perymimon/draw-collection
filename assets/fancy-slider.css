@property --val {
    syntax: "<integer>";
    inherits: true;
    initial-value: -1
}

@property --e {
    syntax: "<number>";
    inherits: true;
    initial-value: -1;
}

@keyframes range-keyframe {
    0% {
        --val: var(--max, 360);
    }
    100% {
        --val: var(--min, 0);
    }
}

label {
    timeline-scope: --thumb-view; /* limit the scopes of the anchor to the label */
    anchor-scope: --thumb;
    position: relative;

    --c: var(--color-primary, Orange); /* active color */
    --g: round(.3em, 1px); /* the gap */
    --l: round(.2em, 1px); /* line thickness*/
    --s: round(1em, 1px); /* thumb size*/

    /* One day i will understand why it not work */
    /*animation:  range-keyframe linear infinite both;*/
    /*animation-timeline: --thumb-view;*/
    /*animation-range: entry 100% exit 0%;*/
    /*&::before {*/
    /*    display: inline-block;*/
    /*    content: '';*/
    /*    background-color: hsl(calc(var(--val, 0) * 1deg) 50% 50%);*/
    /*    width: 1em;*/
    /*    aspect-ratio: 1;*/
    /*}*/

    input[type=range] {
        height: var(--s); /* needed for Firefox*/
        --_c: color-mix(in srgb, var(--c), #000 var(--p, 0%));
        appearance: none;
        background: none;
        cursor: pointer;
        overflow: hidden;

        &:focus-visible, &:hover {
            --p: 25%;
        }

        &:active, &:focus-visible {
            --_b: var(--s)
        }

        &::-webkit-slider-thumb {
            /* chromium */
            anchor-name: --range-thumb;
            view-timeline: --thumb-view inline;
            height: var(--s);
            aspect-ratio: 1;
            border-radius: 50%;
            box-shadow: 0 0 0 var(--_b, var(--l)) inset var(--_c);
            border-image: linear-gradient(90deg, var(--_c) 50%, #ababab 0) 0 1/calc(50% - var(--l) / 2) 100vw/0 calc(100vw + var(--g));
            appearance: none;
            transition: .3s;
        }

    }

    output {
        animation: range-keyframe linear both;
        animation-timeline: --thumb-view;
        animation-range: entry 100% exit 0%;

        &:before {

            margin-block-start: var(--space-2);

            position: absolute;
            position-anchor: --range-thumb;
            position-area: bottom;

            counter-reset: num var(--val);
            content: counter(num);

            --e: var(--val);
            transition: --e .1s ease-out;
            rotate: min(30deg, max(calc((var(--e) - var(--val)) * 1deg), -30deg));
            --hue: calc(var(--val) * 1deg);
            border-block: 1px solid;
            border-color: color-mix(in hsl, var(--color-primary), hsl(var(--hue) 50% 50%));
        }
    }
}
